package com.xuexi.workbench.mapper;

import com.xuexi.workbench.domain.Activity;
import com.xuexi.workbench.domain.ActivityRemark;

import java.util.List;

public interface ActivityRemarkMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Sat May 21 05:57:55 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Sat May 21 05:57:55 CST 2022
     */
    int insert(ActivityRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Sat May 21 05:57:55 CST 2022
     */
    int insertSelective(ActivityRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Sat May 21 05:57:55 CST 2022
     */
    ActivityRemark selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Sat May 21 05:57:55 CST 2022
     */
    int updateByPrimaryKeySelective(ActivityRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Sat May 21 05:57:55 CST 2022
     */
    int updateByPrimaryKey(ActivityRemark record);


    /**
     * 根据Activity的id来查询市场活动下所有备注的详细信息
     * @param Activityid
     * @return
     */
    List<ActivityRemark> selectActivityRemarkForDetailByActivityId(String Activityid);


    /**
     * 根据市场活动详细信息对象，保存市场活动信息备注
     * @param activityRemark
     * @return
     */
    Integer insertActivityRemark(ActivityRemark activityRemark);


    /**
     * 根据id删除市场活动
     * @param id
     * @return
     */
    Integer deleteActivityRemarkById(String id);


    /**
     * 保存修改的市场活动
     * @param activityRemark
     * @return
     */
    Integer updateActivityRemark(ActivityRemark activityRemark);
}